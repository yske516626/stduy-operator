#include<stdio.h>
void swp( void* p1, void* p2,int sz)
{
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		char tmp = *((char*)p1 + i);
		*((char*)p1 + i) = *((char*)p2 + i );
		*((char*)p2 + i) = tmp;
	}
}
//进行两个元素的交换，一个字节一个字节的进行交换

int cmp(const void * p1,const void * p2)
{
	return (*(int *)p1 - *(int *)p2);
}
//判断第i个元素和第i+1个元素的大小

void bubble_sort(void * p, int ret,int sz,int (*cmp)(const void *,const void *))
{
	int i = 0;
	int j = 0;
	for (i = 0; i < ret - 1; i++)
	{
		for (j = 0; j < ret - 1 - i; j++)
		{
			if (cmp((char*)p + j * sz, (char*)p + (j + 1) * sz ) > 0)
			{
				swp((char*)p + j * sz, (char*)p + (j + 1) * sz,sz);
			}
		}
	}
}

int main(void)
{
	int arr[] = { 9,8,7,6,5,4,3,2,1,0 };
	int i = 0;
	int ret = sizeof(arr) / sizeof(arr[0]);
	bubble_sort(arr,ret,sizeof(int),cmp);
	for (i = 0; i < ret - 1; i++)
	{
		printf("%d ", arr[i]);
	}
	printf("\n");
	return 0;
}
